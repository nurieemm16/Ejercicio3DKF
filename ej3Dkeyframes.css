body, html {
    height: 100%;
    margin: 0;
}

.animacion3D {
    width: 100%;
    height: 80vh;
    perspective: 800px; /*Sirve para simular la percepción de profundidad en elementos posicionados en un espacio 3D. Eso quiere decir que el elemento hijo objeto de mi contenedor animacion3D se visualizará en un espacio 3D, y la distancia especificada en perspective determinará cómo se percibe la profundidad y la perspectiva entre esos elementos.*/
    display: flex;
    justify-content: center;
    align-items: center;
}

.objeto {
    width: 100px;
    height: 100px;
    background-color:darkseagreen;
    transform-style: preserve-3d; /* asegura que mi elemento hijo objeto mantenga su transformacion 3D individual y no se vean afectados por las transformaciones aplicadas a su elemento contenedor animacion3D.Con preserve-3d, todos los elementos hijos del elemento que tenga esa propiedad, se tratarán como elementos 3D*/
    animation: animacionobjeto3D 6s infinite alternate 2s ease-in-out;
}


/*El uso de valores negativos en las transformaciones de translateX, translateY y translateZ se utiliza para desplazar un elemento en dirección opuesta al eje correspondiente. Por lo tanto, los valores negativos en las transformaciones se utilizan para desplazar un elemento en dirección contraria a la del origen del sistema de coordenadas.*/


@keyframes animacionobjeto3D {
    0% {
        transform: translateX(-200px) translateY(-200px) translateZ(-200px) rotateX(0deg) rotateY(0deg) rotateZ(0deg); /* Eje Z es el eje de profundidad*/
    }

    25% {
        transform: translateX(200px) translateY(200px) translateZ(200px) rotateX(90deg) rotateY(90deg) rotateZ(90deg); /*Rotate Z: función que permite indicar la rotación sobre su propio eje. Un valor positivo hará que mi elemento rote en sentido antihorario, mientras que un valor negativo hará que rote en sentido horario.*/
    }

    50% {
        transform: translateX(-200px) translateY(-200px) translateZ(-200px) rotateX(180deg) rotateY(180deg) rotateZ(180deg); border-radius: 50%;
    }

    75% {
        transform: translateX(200px) translateY(200px) translateZ(200px) rotateX(270deg) rotateY(270deg) rotateZ(270deg); background-color: plum;
    }

    100% {
        transform: translateX(-200px) translateY(-200px) translateZ(-200px) rotateX(360deg) rotateY(360deg) rotateZ(360deg);box-shadow: 0 0 10px rgba(7, 1, 1, 0.411); 
    }
}

/*Este código creará un objeto en forma de cubo con un color verde y luego se convertirá en una redonda de color lila y lo animará para que se desplace en un movimiento tridimensional que implica rotaciones en los tres ejes (X, Y y Z) y desplazamientos en el espacio. La animación se repetirá infinitamente con un efecto de rebote usando ease-in-out en los keyframes y con un delay de 2s*/